listen: 0.0.0.0:4222
http: 0.0.0.0:8222

cluster {
    name: "nats_jetstream_cluster"
    listen: 0.0.0.0:6222

    routes = [
    "nats://nats-1:6222",
    "nats://nats-2:6222",
    "nats://nats-3:6222"
    ]
}

jetstream {
    store_dir=/var/lib/nats/data
    max_file=10Gi
}

authorization {
    # Allow the ingestors to listen on the MQTT topic "v1/agent/+/data/1" and "v1/agent/+/data/2".
    # https://docs.nats.io/running-a-nats-service/configuration/mqtt#mqtt-topics-and-nats-subjects
    # We also allow need to allow "$MQTT.sub.>" because NATS uses this topic to store durable subsription.
    # https://docs.nats.io/running-a-nats-service/configuration/mqtt/mqtt_config#special-permissions
    ingestor1_perms = {
        subscribe = ["v1.agent.*.data.1", "$MQTT.sub.>"]
    }

    ingestor2_perms = {
        subscribe = ["v1.agent.*.data.2", "$MQTT.sub.>"]
    }

    # Add your own servers.
    # Glouton publishes its metrics to the "v1/agent/fqdn/data" topic, with "fqdn" replaced by the host FQDN.
    # `.` are replaced by `,` in the FQDN because NATS doesn't support `.` in MQTT topics.
    # On Linux, you can get your FQDN with "hostname -f".
    # We allow the agents to publish on "v1/agent/fqdn/data/+" because "v1/agent/fqdn/data" is mapped to
    # "v1/agent/fqdn/data/1" or "v1/agent/fqdn/data/2", see the "mappings" config below.
    server1_perms = {
        publish = ["v1.agent.server1,example,com.data.*"]
    }

    server2_perms = {
        publish = ["v1.agent.server2,example,com.data.*"]
    }

    users = [
        {user: ingestor1, password: passw0rd, permissions: $ingestor1_perms, allowed_connection_types: ["MQTT"]},
        {user: ingestor2, password: passw0rd, permissions: $ingestor2_perms, allowed_connection_types: ["MQTT"]},
        {user: server1, password: passw0rd1, permissions: $server1_perms, allowed_connection_types: ["MQTT"]},
        {user: server2, password: passw0rd2, permissions: $server2_perms, allowed_connection_types: ["MQTT"]}
    ]
}

mappings = {
  # Distribute the messages received on "v1/agent/+/data" to two topics.
  # One ingestor listens on "v1/agent/+/data/1" and the other on "v1/agent/+/data/2".
  v1.agent.*.data: [
    { destination: v1.agent.$1.data.1, weight: 50% },
    { destination: v1.agent.$1.data.2, weight: 50% }
  ]
}

mqtt {
   port: 1883
}
