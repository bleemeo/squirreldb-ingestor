listen: 0.0.0.0:4222
http: 0.0.0.0:8222

cluster {
    name: "nats_jetstream_cluster"
    listen: 0.0.0.0:6222

    routes = [
    "nats://nats-1:6222",
    "nats://nats-2:6222",
    "nats://nats-3:6222"
    ]
}

jetstream {
    store_dir=/var/lib/nats/data
}

authorization {
    # Allow the ingestor to listen on the MQTT topic "v1/agent/+/data".
    # https://docs.nats.io/running-a-nats-service/configuration/mqtt#mqtt-topics-and-nats-subjects
    # We also allow need to allow "$MQTT.sub.>" because NATS uses this topic to store durable subsription.
    # https://docs.nats.io/running-a-nats-service/configuration/mqtt/mqtt_config#special-permissions
    ingestor_perms = {
        subscribe = ["v1.agent.*.data", "$MQTT.sub.>"]
    }

    # Uncomment and add your own servers.
    # Glouton publishes its metrics to the `v1/agent/fqdn/data` topic, with `fqdn` replaced by the host FQDN.
    # `.` are replaced by `,` in the FQDN because NATS doesn't support `.` in MQTT topics.
    # On Linux, you can get your FQDN with "hostname -f".
    # server1_perms = {
    #     publish = ["v1.agent.server1,example,com.data"]
    # }

    # server2_perms = {
    #     publish = ["v1.agent.server2,example,com.data"]
    # }

    users = [
        {user: ingestor, password: passw0rd, permissions: $ingestor_perms, allowed_connection_types: ["MQTT"]}
        # {user: server1, password: passw0rd, permissions: $server1_perms, allowed_connection_types: ["MQTT"]}
        # {user: server2, password: passw0rd, permissions: $server2_perms, allowed_connection_types: ["MQTT"]}
    ]
}

mqtt {
   port: 1883
}
